{"mappings":"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","sources":["src/scripts/validator.js"],"sourcesContent":["function keepNumbersAndPlus(str) {\n  // Заменяем все символы, кроме цифр и плюса, на пустую строку\n  return str.replace(/[^\\d+]/g, '')\n}\n\nfunction validateForm(form) {\n  const name = form.querySelector('[name=\"name\"]').value\n  // const interest = form.querySelector('[name=\"interest\"]').value\n  const email = form.querySelector('[name=\"email\"]').value\n  const phone = form.querySelector('[name=\"phone\"]').value\n\n  if (!validator.isLength(name, { min: 2 })) {\n    showNotification('Пожалуйста, введите Ваше имя')\n    form.querySelector('[name=\"name\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  if (!email && !phone) {\n    showNotification('Пожалуйста,введите email или номер телефона')\n    return false\n  }\n\n  if (email && !validator.isEmail(email)) {\n    showNotification('Пожалуйста, введите правильный email')\n    form.querySelector('[name=\"email\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  if (phone && !validator.isMobilePhone(keepNumbersAndPlus(phone), 'ru-RU')) {\n    showNotification('Пожалуйста, введите правильный номер телефона')\n    form.querySelector('[name=\"phone\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  return true\n}\n\nfunction showNotification(message) {\n  const notification = document.getElementById('notification')\n  notification.textContent = message\n  notification.style.display = 'block'\n  setTimeout(function () {\n    notification.style.display = 'none'\n  }, 7000)\n}\n\nfunction showSuccess(message) {\n  const success = document.getElementById('success')\n  success.textContent = message\n  success.style.display = 'block'\n  setTimeout(function () {\n    success.style.display = 'none'\n  }, 10000)\n}\n\n// function setupFormValidation(formId, captchaContainerId) {\nfunction setupFormValidation(formId) {\n  const form = document.getElementById(formId)\n\n  form.querySelectorAll('input').forEach(function (input) {\n    input.addEventListener('input', function (event) {\n      event.target.style.border = '1px solid rgba(255, 255, 255, 0.5)'\n    })\n  })\n\n  form.addEventListener('submit', function (event) {\n    if (!validateForm(form)) {\n      event.preventDefault()\n    } else {\n      event.preventDefault()\n      const chat_id = '617780753'\n      const uri = `https://api.telegram.org/bot7780425723:AAHOZOmdv07R_SaSQsZQHKgnE-BBdOrjT0k/sendMessage`\n      // let message = `Данные из формы: \"${this.type.value}\" \\n\n      let message = `Данные из формы: \\n\n      Имя отправителя: ${this.name.value}\\n\n      Задача: ${this.interest.value ? this.interest.value : 'не указано'}\\n\n      Email:  ${this.email.value ? this.email.value : 'не указано'}\\n\n      Номер телефона:  ${this.phone.value ? this.phone.value : 'не указано'}\\n`\n\n      axios\n        .post(uri, {\n          chat_id: chat_id,\n          text: message,\n          parse_mode: 'html',\n        })\n        .then((res) => {\n          this.name.value = ''\n          this.interest.value = ''\n          this.email.value = ''\n          this.phone.value = ''\n          showSuccess('Заявка успешно отправлена!')\n        })\n        .catch((error) => {\n          console.warn(error)\n        })\n\n      var modal = document.getElementById('myModal')\n      modal.style.display = 'none'\n      const submitButton = form.querySelector('button[type=\"submit\"]')\n      submitButton.disabled = true\n    }\n  })\n\n  // form.querySelector('[name=\"phone\"]').addEventListener('input', function (e) {\n  //   var input = e.target\n  //   input.value = input.value.replace(/[^0-9+]/g, '')\n  // })\n}\n\nsetupFormValidation('form')\nsetupFormValidation('form-modal')\n"],"names":[],"version":3,"file":"index.bc58ba41.js.map","sourceRoot":"/__parcel_source_root/"}