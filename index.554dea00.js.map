{"mappings":"ACwCA,SAAS,EAAiB,CAAO,EAC/B,IAAM,EAAe,SAAS,cAAc,CAAC,eAC7C,CAAA,EAAa,WAAW,CAAG,EAC3B,EAAa,KAAK,CAAC,OAAO,CAAG,QAC7B,WAAW,WACT,EAAa,KAAK,CAAC,OAAO,CAAG,MAC/B,EAAG,IACL,CAYA,SAAS,EAAoB,CAAM,EACjC,IAAM,EAAO,SAAS,cAAc,CAAC,GAErC,EAAK,gBAAgB,CAAC,SAAS,OAAO,CAAC,SAAU,CAAK,EACpD,EAAM,gBAAgB,CAAC,QAAS,SAAU,CAAK,EAC7C,EAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAG,oCAC9B,EACF,GAEA,EAAK,gBAAgB,CAAC,SAAU,SAAU,CAAK,EAC7C,GAAI,CAAC,AAhET,SAAsB,CAAI,EACxB,IAAM,EAAO,EAAK,aAAa,CAAC,iBAAiB,KAAK,CAEhD,EAAQ,EAAK,aAAa,CAAC,kBAAkB,KAAK,CAClD,EAAQ,EAAK,aAAa,CAAC,kBAAkB,KAAK,QAExD,AAAK,UAAU,QAAQ,CAAC,EAAM,CAAE,IAAK,CAAE,GAOnC,AAAC,GAAU,EAKX,GAAS,CAAC,UAAU,OAAO,CAAC,IAC9B,EAAiB,wCACjB,EAAK,aAAa,CAAC,kBAAkB,KAAK,CAAC,MAAM,CAC/C,6BACK,CAAA,GAGT,CAAI,IAAS,CAAC,UAAU,aAAa,CA5B9B,AA4BkD,EA5B9C,OAAO,CAAC,UAAW,IA4BmC,WAC/D,EAAiB,iDACjB,EAAK,aAAa,CAAC,kBAAkB,KAAK,CAAC,MAAM,CAC/C,6BACK,CAAA,IAfP,EAAiB,+CACV,CAAA,IARP,EAAiB,gCACjB,EAAK,aAAa,CAAC,iBAAiB,KAAK,CAAC,MAAM,CAC9C,6BACK,CAAA,EAuBX,EA+BsB,GAChB,EAAM,cAAc,OACf,CACL,EAAM,cAAc,GAIpB,IAAI,EAAU,CAAC;;2GACE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;;kDAC3B,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,aAAa;;cAC3D,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,aAAa;;qGAC5C,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,aAAa;AAAE,CAAC,CAEzE,MACG,IAAI,CATK,yFASC,CACT,QAXY,YAYZ,KAAM,EACN,WAAY,MACd,GACC,IAAI,CAAC,AAAC,IACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAG,GAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,GACtB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,GACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,GACnB,AA5CV,SAAqB,CAAO,EAC1B,IAAM,EAAU,SAAS,cAAc,CAAC,UACxC,CAAA,EAAQ,WAAW,CAAG,EACtB,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,WAAW,WACT,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC1B,EAAG,IACL,EAqCsB,6BACd,GACC,KAAK,CAAC,AAAC,IACN,QAAQ,IAAI,CAAC,EACf,GAGF,AADY,SAAS,cAAc,CAAC,WAC9B,KAAK,CAAC,OAAO,CAAG,OAEtB,AADqB,EAAK,aAAa,CAAC,yBAC3B,QAAQ,CAAG,CAAA,CAC1B,CACF,EAMF,CAEA,EAAoB,QACpB,EAAoB","sources":["<anon>","src/scripts/validator.js"],"sourcesContent":["function keepNumbersAndPlus(str) {\n    // Заменяем все символы, кроме цифр и плюса, на пустую строку\n    return str.replace(/[^\\d+]/g, \"\");\n}\nfunction validateForm(form) {\n    const name = form.querySelector('[name=\"name\"]').value;\n    // const interest = form.querySelector('[name=\"interest\"]').value\n    const email = form.querySelector('[name=\"email\"]').value;\n    const phone = form.querySelector('[name=\"phone\"]').value;\n    if (!validator.isLength(name, {\n        min: 2\n    })) {\n        showNotification(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\");\n        form.querySelector('[name=\"name\"]').style.border = \"2px solid rgb(151, 28, 28)\";\n        return false;\n    }\n    if (!email && !phone) {\n        showNotification(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430,\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email \\u0438\\u043B\\u0438 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\");\n        return false;\n    }\n    if (email && !validator.isEmail(email)) {\n        showNotification(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 email\");\n        form.querySelector('[name=\"email\"]').style.border = \"2px solid rgb(151, 28, 28)\";\n        return false;\n    }\n    if (phone && !validator.isMobilePhone(keepNumbersAndPlus(phone), \"ru-RU\")) {\n        showNotification(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\");\n        form.querySelector('[name=\"phone\"]').style.border = \"2px solid rgb(151, 28, 28)\";\n        return false;\n    }\n    return true;\n}\nfunction showNotification(message) {\n    const notification = document.getElementById(\"notification\");\n    notification.textContent = message;\n    notification.style.display = \"block\";\n    setTimeout(function() {\n        notification.style.display = \"none\";\n    }, 7000);\n}\nfunction showSuccess(message) {\n    const success = document.getElementById(\"success\");\n    success.textContent = message;\n    success.style.display = \"block\";\n    setTimeout(function() {\n        success.style.display = \"none\";\n    }, 10000);\n}\n// function setupFormValidation(formId, captchaContainerId) {\nfunction setupFormValidation(formId) {\n    const form = document.getElementById(formId);\n    form.querySelectorAll(\"input\").forEach(function(input) {\n        input.addEventListener(\"input\", function(event) {\n            event.target.style.border = \"1px solid rgba(255, 255, 255, 0.5)\";\n        });\n    });\n    form.addEventListener(\"submit\", function(event) {\n        if (!validateForm(form)) event.preventDefault();\n        else {\n            event.preventDefault();\n            const chat_id = \"617780753\";\n            const uri = `https://api.telegram.org/bot7780425723:AAHOZOmdv07R_SaSQsZQHKgnE-BBdOrjT0k/sendMessage`;\n            // let message = `Данные из формы: \"${this.type.value}\" \\n\n            let message = `\\u{414}\\u{430}\\u{43D}\\u{43D}\\u{44B}\\u{435} \\u{438}\\u{437} \\u{444}\\u{43E}\\u{440}\\u{43C}\\u{44B}: \n\n      \\u{418}\\u{43C}\\u{44F} \\u{43E}\\u{442}\\u{43F}\\u{440}\\u{430}\\u{432}\\u{438}\\u{442}\\u{435}\\u{43B}\\u{44F}: ${this.name.value}\n\n      \\u{417}\\u{430}\\u{434}\\u{430}\\u{447}\\u{430}: ${this.interest.value ? this.interest.value : \"\\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E\"}\\n\n      Email:  ${this.email.value ? this.email.value : \"\\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E\"}\n\n      \\u{41D}\\u{43E}\\u{43C}\\u{435}\\u{440} \\u{442}\\u{435}\\u{43B}\\u{435}\\u{444}\\u{43E}\\u{43D}\\u{430}:  ${this.phone.value ? this.phone.value : \"\\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E\"}\\n`;\n            axios.post(uri, {\n                chat_id: chat_id,\n                text: message,\n                parse_mode: \"html\"\n            }).then((res)=>{\n                this.name.value = \"\";\n                this.interest.value = \"\";\n                this.email.value = \"\";\n                this.phone.value = \"\";\n                showSuccess(\"\\u0417\\u0430\\u044F\\u0432\\u043A\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430!\");\n            }).catch((error)=>{\n                console.warn(error);\n            });\n            var modal = document.getElementById(\"myModal\");\n            modal.style.display = \"none\";\n            const submitButton = form.querySelector('button[type=\"submit\"]');\n            submitButton.disabled = true;\n        }\n    });\n// form.querySelector('[name=\"phone\"]').addEventListener('input', function (e) {\n//   var input = e.target\n//   input.value = input.value.replace(/[^0-9+]/g, '')\n// })\n}\nsetupFormValidation(\"form\");\nsetupFormValidation(\"form-modal\");\n\n//# sourceMappingURL=index.554dea00.js.map\n","function keepNumbersAndPlus(str) {\n  // Заменяем все символы, кроме цифр и плюса, на пустую строку\n  return str.replace(/[^\\d+]/g, '')\n}\n\nfunction validateForm(form) {\n  const name = form.querySelector('[name=\"name\"]').value\n  // const interest = form.querySelector('[name=\"interest\"]').value\n  const email = form.querySelector('[name=\"email\"]').value\n  const phone = form.querySelector('[name=\"phone\"]').value\n\n  if (!validator.isLength(name, { min: 2 })) {\n    showNotification('Пожалуйста, введите Ваше имя')\n    form.querySelector('[name=\"name\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  if (!email && !phone) {\n    showNotification('Пожалуйста,введите email или номер телефона')\n    return false\n  }\n\n  if (email && !validator.isEmail(email)) {\n    showNotification('Пожалуйста, введите правильный email')\n    form.querySelector('[name=\"email\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  if (phone && !validator.isMobilePhone(keepNumbersAndPlus(phone), 'ru-RU')) {\n    showNotification('Пожалуйста, введите правильный номер телефона')\n    form.querySelector('[name=\"phone\"]').style.border =\n      '2px solid rgb(151, 28, 28)'\n    return false\n  }\n\n  return true\n}\n\nfunction showNotification(message) {\n  const notification = document.getElementById('notification')\n  notification.textContent = message\n  notification.style.display = 'block'\n  setTimeout(function () {\n    notification.style.display = 'none'\n  }, 7000)\n}\n\nfunction showSuccess(message) {\n  const success = document.getElementById('success')\n  success.textContent = message\n  success.style.display = 'block'\n  setTimeout(function () {\n    success.style.display = 'none'\n  }, 10000)\n}\n\n// function setupFormValidation(formId, captchaContainerId) {\nfunction setupFormValidation(formId) {\n  const form = document.getElementById(formId)\n\n  form.querySelectorAll('input').forEach(function (input) {\n    input.addEventListener('input', function (event) {\n      event.target.style.border = '1px solid rgba(255, 255, 255, 0.5)'\n    })\n  })\n\n  form.addEventListener('submit', function (event) {\n    if (!validateForm(form)) {\n      event.preventDefault()\n    } else {\n      event.preventDefault()\n      const chat_id = '617780753'\n      const uri = `https://api.telegram.org/bot7780425723:AAHOZOmdv07R_SaSQsZQHKgnE-BBdOrjT0k/sendMessage`\n      // let message = `Данные из формы: \"${this.type.value}\" \\n\n      let message = `Данные из формы: \\n\n      Имя отправителя: ${this.name.value}\\n\n      Задача: ${this.interest.value ? this.interest.value : 'не указано'}\\n\n      Email:  ${this.email.value ? this.email.value : 'не указано'}\\n\n      Номер телефона:  ${this.phone.value ? this.phone.value : 'не указано'}\\n`\n\n      axios\n        .post(uri, {\n          chat_id: chat_id,\n          text: message,\n          parse_mode: 'html',\n        })\n        .then((res) => {\n          this.name.value = ''\n          this.interest.value = ''\n          this.email.value = ''\n          this.phone.value = ''\n          showSuccess('Заявка успешно отправлена!')\n        })\n        .catch((error) => {\n          console.warn(error)\n        })\n\n      var modal = document.getElementById('myModal')\n      modal.style.display = 'none'\n      const submitButton = form.querySelector('button[type=\"submit\"]')\n      submitButton.disabled = true\n    }\n  })\n\n  // form.querySelector('[name=\"phone\"]').addEventListener('input', function (e) {\n  //   var input = e.target\n  //   input.value = input.value.replace(/[^0-9+]/g, '')\n  // })\n}\n\nsetupFormValidation('form')\nsetupFormValidation('form-modal')\n"],"names":["showNotification","message","notification","document","getElementById","textContent","style","display","setTimeout","setupFormValidation","formId","form","querySelectorAll","forEach","input","addEventListener","event","target","border","validateForm","name","querySelector","value","email","phone","validator","isLength","min","isEmail","isMobilePhone","str","replace","preventDefault","interest","axios","post","chat_id","text","parse_mode","then","res","showSuccess","success","catch","error","console","warn","modal","submitButton","disabled"],"version":3,"file":"index.554dea00.js.map"}